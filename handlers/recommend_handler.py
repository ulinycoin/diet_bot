from aiogram import Router
from aiogram.types import Message
from aiogram.filters import Command
from models.base import get_db_session
from models.user_model import User

router = Router()

# –ö–æ–º–∞–Ω–¥–∞ /recommend ‚Äî —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –ø–∏—Ç–∞–Ω–∏—é
@router.message(Command("recommend"))
async def recommend_command(message: Message):
    telegram_id = message.from_user.id

    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã
    with get_db_session() as session:
        user = session.query(User).filter_by(telegram_id=telegram_id).first()
        if not user:
            await message.answer("–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.")
            return

        # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –Ω–æ—Ä–º—É –∫–∞–ª–æ—Ä–∏–π –∏ –ë–ñ–£
        calories, protein, fats, carbs = calculate_nutrition(user)

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏
        recommendation = (
            f"üìã –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –ø–∏—Ç–∞–Ω–∏—é:\n\n"
            f"üçé –î–Ω–µ–≤–Ω–∞—è –Ω–æ—Ä–º–∞ –∫–∞–ª–æ—Ä–∏–π: {calories} –∫–∫–∞–ª\n"
            f"üí™ –ë–µ–ª–∫–∏: {protein} –≥\n"
            f"ü•ë –ñ–∏—Ä—ã: {fats} –≥\n"
            f"üçû –£–≥–ª–µ–≤–æ–¥—ã: {carbs} –≥\n\n"
            f"–ü—Ä–∏–º–µ—Ä–Ω—ã–π —Ä–∞—Ü–∏–æ–Ω:\n"
            f"- –ó–∞–≤—Ç—Ä–∞–∫: –æ–≤—Å—è–Ω–∫–∞ —Å —Ñ—Ä—É–∫—Ç–∞–º–∏ –∏ –æ—Ä–µ—Ö–∞–º–∏\n"
            f"- –û–±–µ–¥: –∫—É—Ä–∏–Ω–∞—è –≥—Ä—É–¥–∫–∞, —Ä–∏—Å –∏ –æ–≤–æ—â–∏\n"
            f"- –£–∂–∏–Ω: —Ä—ã–±–∞ —Å –∑–∞–ø–µ—á—ë–Ω–Ω—ã–º–∏ –æ–≤–æ—â–∞–º–∏\n"
            f"- –ü–µ—Ä–µ–∫—É—Å—ã: –æ—Ä–µ—Ö–∏, –π–æ–≥—É—Ä—Ç –∏–ª–∏ —Ñ—Ä—É–∫—Ç—ã\n"
        )
        await message.answer(recommendation)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞—Å—á—ë—Ç–∞ –¥–Ω–µ–≤–Ω–æ–π –Ω–æ—Ä–º—ã –∫–∞–ª–æ—Ä–∏–π –∏ –ë–ñ–£
def calculate_nutrition(user):
    # –§–æ—Ä–º—É–ª—ã —Ä–∞—Å—á—ë—Ç–∞ –∫–∞–ª–æ—Ä–∏–π
    if user.gender == "–º—É–∂—Å–∫–æ–π":
        bmr = 88.36 + (13.4 * user.weight) + (4.8 * user.height) - (5.7 * user.age)
    else:
        bmr = 447.6 + (9.2 * user.weight) + (3.1 * user.height) - (4.3 * user.age)

    # –£—Ä–æ–≤–µ–Ω—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    activity_multiplier = {
        "low": 1.2,
        "medium": 1.55,
        "high": 1.75
    }.get(user.activity_level, 1.2)

    # –ö–∞–ª–æ—Ä–∏–∏ —Å —É—á—ë—Ç–æ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    calories = int(bmr * activity_multiplier)

    # –ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞ –¥–ª—è —Ü–µ–ª–µ–π
    if user.goal == "–ø–æ—Ö—É–¥–µ–Ω–∏–µ":
        calories -= 500
    elif user.goal == "–Ω–∞–±–æ—Ä –º–∞—Å—Å—ã":
        calories += 500

    # –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ë–ñ–£
    protein = int(0.3 * calories / 4)  # 30% –∫–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç–∏
    fats = int(0.25 * calories / 9)    # 25% –∫–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç–∏
    carbs = int(0.45 * calories / 4)   # 45% –∫–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç–∏

    return calories, protein, fats, carbs

# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –º–∞—Ä—à—Ä—É—Ç–∞
def register_recommend_handler(dp):
    dp.include_router(router)
